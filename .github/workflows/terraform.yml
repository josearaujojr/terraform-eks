name: Terraform EKS Pipeline

on:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      action:
        description: 'Action to run (apply/destroy)'
        required: true
        default: 'apply'
        type: choice
        options:
          - apply
          - destroy

jobs:
  init:
    runs-on: ubuntu-latest
    env:
      TF_ROOT: ${{ github.workspace }}
      AWS_DEFAULT_REGION: us-east-1
      TF_BACKEND_BUCKET: tf-state-777
      TF_BACKEND_KEY: app-eks/terraform.tfstate
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y curl unzip git

      - name: Install Terraform
        run: |
          curl -LO https://releases.hashicorp.com/terraform/1.5.7/terraform_1.5.7_linux_amd64.zip
          unzip terraform_1.5.7_linux_amd64.zip
          sudo mv terraform /usr/local/bin/
          terraform --version

      - name: Configure AWS credentials
        run: |
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
          aws configure set region $AWS_DEFAULT_REGION

      - name: Terraform Init
        run: |
          cd $TF_ROOT
          terraform init -backend-config="bucket=$TF_BACKEND_BUCKET" -backend-config="key=$TF_BACKEND_KEY" -backend-config="region=$AWS_DEFAULT_REGION"

  plan:
    needs: init
    runs-on: ubuntu-latest
    env:
      TF_ROOT: ${{ github.workspace }}
      AWS_DEFAULT_REGION: us-east-1
      CIDR_BLOCK: ${{ secrets.CIDR_BLOCK }}
      PROJECT_NAME: ${{ secrets.PROJECT_NAME }}
      CLUSTER_NAME: ${{ secrets.CLUSTER_NAME }}
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    if: github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Terraform
        run: |
          curl -LO https://releases.hashicorp.com/terraform/1.5.7/terraform_1.5.7_linux_amd64.zip
          unzip terraform_1.5.7_linux_amd64.zip
          sudo mv terraform /usr/local/bin/
          terraform --version

      - name: Terraform Plan
        run: |
          cd $TF_ROOT
          terraform init -backend-config="bucket=$TF_BACKEND_BUCKET" -backend-config="key=$TF_BACKEND_KEY" -backend-config="region=$AWS_DEFAULT_REGION"          
          terraform plan -var="cidr_block=$CIDR_BLOCK" -var="project_name=$PROJECT_NAME" -var="cluster_name=$CLUSTER_NAME" -var="aws_account_id=$AWS_ACCOUNT_ID" -input=false -out=tfplan

  apply:
    needs: init
    runs-on: ubuntu-latest
    env:
      TF_ROOT: ${{ github.workspace }}
      AWS_DEFAULT_REGION: us-east-1
      CIDR_BLOCK: ${{ secrets.CIDR_BLOCK }}
      PROJECT_NAME: ${{ secrets.PROJECT_NAME }}
      CLUSTER_NAME: ${{ secrets.CLUSTER_NAME }}
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'apply'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Terraform
        run: |
          curl -LO https://releases.hashicorp.com/terraform/1.5.7/terraform_1.5.7_linux_amd64.zip
          unzip terraform_1.5.7_linux_amd64.zip
          sudo mv terraform /usr/local/bin/
          terraform --version

      - name: Terraform Plan & Apply
        run: |
          cd $TF_ROOT
          terraform plan -var="cidr_block=$CIDR_BLOCK" -var="project_name=$PROJECT_NAME" -var="cluster_name=$CLUSTER_NAME" -var="aws_account_id=$AWS_ACCOUNT_ID" -input=false -out=tfplan
          terraform apply -input=false tfplan

  destroy:
    needs: init
    runs-on: ubuntu-latest
    env:
      TF_ROOT: ${{ github.workspace }}
      AWS_DEFAULT_REGION: us-east-1
      CIDR_BLOCK: ${{ secrets.CIDR_BLOCK }}
      PROJECT_NAME: ${{ secrets.PROJECT_NAME }}
      CLUSTER_NAME: ${{ secrets.CLUSTER_NAME }}
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'destroy'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Terraform
        run: |
          curl -LO https://releases.hashicorp.com/terraform/1.5.7/terraform_1.5.7_linux_amd64.zip
          unzip terraform_1.5.7_linux_amd64.zip
          sudo mv terraform /usr/local/bin/
          terraform --version

      - name: Terraform Destroy
        run: |
          cd $TF_ROOT
          terraform destroy -auto-approve -var="cidr_block=$CIDR_BLOCK" -var="project_name=$PROJECT_NAME" -var="cluster_name=$CLUSTER_NAME" -var="aws_account_id=$AWS_ACCOUNT_ID"
        continue-on-error: true