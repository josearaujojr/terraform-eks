apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-logs-deployment
  namespace: app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx-logs
  template:
    metadata:
      labels:
        app: nginx-logs
    spec:
      containers:
      - name: nginx
        image: nginx:latest
        ports:
        - containerPort: 80
        volumeMounts:
        - name: nginx-config-volume
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
        - name: efs-logs
          mountPath: /efs   # dir dentro do container onde o EFS ser√° montado
      volumes:
      - name: nginx-config-volume
        configMap:
          name: nginx-config
      - name: efs-logs
        persistentVolumeClaim:
          claimName: efs-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-logs-service
  namespace: app
  labels:
    app: nginx-logs
spec:
  ports:
  - port: 80
    targetPort: 80
  selector:
    app: nginx-logs
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nginx-logs-ingress
  namespace: app
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - host: ""
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: nginx-logs-service
            port:
              number: 80
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: app
data:
  nginx.conf: |
    user  nginx;
    worker_processes  1;

    error_log  /var/log/nginx/error.log warn;
    pid        /var/run/nginx.pid;

    events {
        worker_connections  1024;
    }

    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;

        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';

        access_log  /var/log/nginx/access.log  main;

        sendfile        on;
        keepalive_timeout  65;

        server {
            listen       80;
            server_name  _;

            root         /efs;

            location / {
                autoindex on;
                autoindex_exact_size off;
                autoindex_localtime on;
                try_files $uri $uri/ =404;
            }

            error_page 404 /404.html;
            location = /404.html {
            }

            error_page 500 502 503 504 /50x.html;
            location = /50x.html {
            }
        }
    }
